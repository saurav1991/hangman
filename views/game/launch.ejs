<nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <p class="navbar-brand">Game <%= gameName %></p>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li><a href='#'>Admin : <strong><%= gameAdmin %></a></li>
            <% if (!req.session.isGameAdmin) { %>
            	<li><a href="/leave">Leave Game</a></li>
            <% } %>
          </ul>
          <a class="navbar-right navbar-text" href="/logout">Logout</a>
        </div>
    </div>
</nav>

<div class="container" ng-app="Game">
	<div class="row" id="chat">
	  <div id="messages" class="col-xs-10" ng-controller="MessageController">
	  	<p ng-repeat="move in moves track by $index">
	  		<span>{{move}}</span>
	  	</p>
	  </div>
	  <div id="users" class="col-xs-2" ng-controller="PlayerController">
	    <p class="lead">Users</p>
	    <ul>
	    	<li ng-repeat="player in players">
	    		<span>{{player}}</span>
	    	</li>
	    </ul>
	  </div>
	</div>

	<div class="row" ng-controller="MoveController">
	  <div class="col-xs-11">
	    <input id="new-message" class="form-control" type="text" ng-model="newMove" />
	  </div>
	  <div class="col-xs-1">
	    <button class="btn btn-default" ng-click="sendMsg()">Send</button>
	  </div>
	</div>
</div>
<script type="text/javascript">
	var game = angular.module('Game', []);
	game.controller('PlayerController', function($scope, $http) {
		console.log("INSIDE ANGULAR PLAYER CONTROLLER");
		$scope.players = $scope.players || [];
		io.socket.get('/games/player', function (players) {
			console.log("Existing players ", players);
			$scope.players = players;
			$scope.$apply();
		});
		console.log("LISTENING FOR GAME EVENTS");
		io.socket.on('game', function(obj) {
			console.log('Listening!!');
			console.log('EventData', obj);
			if (obj.verb === 'addedTo') {	
				$scope.players.push(obj.addedId);
				$scope.$apply();
			}
			if (obj.verb === 'removedFrom') {
				var playerIndex = $scope.players.indexOf(obj.removedId);
				$scope.players.splice(playerIndex, 1);
				$scope.$apply();
			}
		});
	});

	game.controller('MessageController', function($scope, $http) {
		console.log("INSIDE ANGULAR MESSAGE CONTROLLER");
		$scope.moves = $scope.moves || [];
		io.socket.get('/moves/list', function (moves) {
			console.log("Past moves", moves);
			$scope.moves = moves;
			$scope.$apply();
		});
		console.log('LISTENING FOR MOVE EVENTS');
		io.socket.on('move', function(obj) {
			console.log('GOT MOVE EVENT');
			if (obj.verb === 'created') {
				console.log('MOVE CREATED');
				console.log(obj.data);
				$scope.moves.push(obj.data.text);
				console.log($scope.moves);
				$scope.$apply();
			}
		});
	});

	game.controller('MoveController', function($scope, $http) {
		console.log("INSIDE ANGULAR MOVE CONTROLLER");
		$scope.sendMsg = function () {
			console.log($scope.newMove);
			io.socket.post('/moves/addMove', {move: $scope.newMove});
			$scope.newMove = "";
		}
	});
</script>
